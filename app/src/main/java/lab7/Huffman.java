/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package lab7;
import java.util.*;
import heap.Heap;

public class Huffman {

    private Heap frequencies = new Heap<Node, Integer>();



    /*
     * 
     */
    public void countFrequencies(String s) {
        for(char c : s) {
            Node n = new Node(c);
            if(frequencies.containsKey(n)) {
                frequencies.changePriority(n, )
            } else {
                frequencies.add(new Node(c), )
            }

        }
    }
    
    public static void main(String[] args) {
        String fileName = args[0];
        try {
         Scanner scan = new Scanner(new File fileName);
     } catch (FileNotFoundException e) {
         System.out.println("Could not open file " + fileName);
         return;
     }
     }
}

/** inner class representing a node in the tree. (copied from A2) */
public class Node {
    public char character;
    public int frequency;
    public Node parent;
    public Node left;
    public Node right;
    public int height;

    public String toString() {
      return character + "(" + height + ")";
    }

    /** constructor: gives default values to all fields */
    public Node() {
    }

    /** constructor: sets only word */
    public Node(char c) {
      character = c;
    }

    /** constructor: sets character and parent fields */
    public Node(char c, int f, Node p) {
      character = c;
      frequency = f;
      parent = p;
    }

    /** constructor: sets all fields */
    public Node(char c, int f, Node p, Node l, Node r) {
      frequency = f;
      character = c;
      parent = p;
      left = l;
      right = r;
    }
  }
